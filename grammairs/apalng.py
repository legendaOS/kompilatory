from grammairs import Grammair, fillGrammair


apalang = Grammair()

r = [

    [['Программа'], ['СписокБлоков']],

    [['СписокБлоков'], ['Блок', 'СписокБлоков']],
    [['СписокБлоков'], ['Блок']],

    [['Блок'], ['Выражение']],
    [['Блок'], ['Функция']],
    [['Блок'], ['Пока']],
    [['Блок'], ['Для']],
    [['Блок'], ['Если']],
    [['Блок'], ['Стоп']],

    [['Выражение'], ['Определение']],
    [['Выражение'], ['Объявление']],
    [['Выражение'], ['Присваивание']],

    [['Присваивание'], ['Лево', 'равно', 'Право', 'т']],

    [['Лево'], ['ИМЯ']],

    [['Право'], ['Подсчет']],
    [['Право'], ['ИМЯ']],
    [['Право'], ['Вызов']],
    [['Право'], ['СписокБукв']],
    [['Право'], ['ОпределениеСписка']],

    [['Определение'], ['Тип', 'ИМЯ', 'т']],

    [['Тип'], ['Цел']],
    [['Тип'], ['Дроб']],
    [['Тип'], ['Строка']],
    [['Тип'], ['Список']],

    [['Объявление'], ['Тип', 'ИМЯ', 'равно', 'Право', 'т']],

    [['Пока'], ['ИМЯ', 'двточ', 'ПОКА', 'Право', 'ВЫПОЛН', 'СписокБлоков', 'ВСЕ']],

    [['Стоп'], ['СТОП', 'ИМЯ', 'т']], 

    [['Функция'], ['ФУНКЦИЯ', 'ИМЯ', 'Лскб', 'СписПарам', 'ВЫПОЛН', 'СписокБлоков', 'ВЕРНУТЬ', 'Право', 'ВСЕ']],

    [['СписПарам'], ['ИМЯ', 'Пскб']],
    [['СписПарам'], ['ИМЯ', 'Запятая', 'СписПарам']],
    [['СписПарам'], ['Пскб']],

    [['СписПарамФ'], ['Право', 'Пскб']],
    [['СписПарамФ'], ['Право', 'Запятая', 'СписПарамФ']],
    [['СписПарамФ'], ['Пскб']],

    [['Вызов'], ['ИМЯ', 'Лскб', 'СписПарамФ']],

    [['если'], ['ЕСЛИ', 'Право', 'ВЫПОЛН', 'СписокБлоков', 'ВСЕ']],
    [['если'], ['ЕСЛИ', 'Право', 'ВЫПОЛН', 'СписокБлоков', 'ИНАЧЕ', 'СписокБлоков', 'ВСЕ']],

    [['Для'], ['ИМЯ', 'двточ', 'ДЛЯ', 'Цел', 'ИМЯ', 'равно', 'Число', 'ДО', 'Число', 'ШАГ', 'Число', 'ВЫПОЛН', 'СписокБлоков', 'ВСЕ']],
    [['Для'], ['ИМЯ', 'двточ', 'ДЛЯ', 'ИМЯ', 'В', 'ИМЯ', 'ВЫПОЛН', 'СписокБлоков', 'ВСЕ']],

    [['СписокБукв'], ['Кавыч' , 'Буква', 'Кавыч']],
    [['СписокБукв'], ['ДвКавыч' , 'Буква', 'ДвКавыч']],
    [['СписокБукв'], ['Кавыч' , 'Буква', 'СписокБукв', 'Кавыч']],
    [['СписокБукв'], ['ДвКавыч' , 'Буква', 'СписокБукв', 'ДвКавыч']],
    [['СписокБукв'], ['Кавыч', 'Кавыч']],
    [['СписокБукв'], ['ДвКавыч', 'ДвКавыч']],

    #Буква -> [аяАЯ09_]

    [['ОпределениеСписка'], ['ЛскбКВ', 'ПскбКВ']],
    [['ОпределениеСписка'], ['ЛскбКВ', 'СписокЭлементовСписка', 'ПскбКВ']],

    [['СписокЭлементовСписка'], ['ЭлементСписка']],
    [['СписокЭлементовСписка'], ['ЭлементСписка', 'Запятая', 'СписокЭлементовСписка']],

    [['ЭлементСписка'], ['Право']],

    [['Подсчет'] , ['Выр', 'сравнение', 'Выр']],
    [['Подсчет'] , ['Выр']],
    
    [['Выр']     , ['Лскб', 'Выр', 'Пскб', 'множить', 'Выр']],
    [['Выр']     , ['Лскб', 'Выр', 'Пскб']],
    [['Выр']     , ['Авыр', 'множить', 'Выр']],
    [['Выр']     , ['Авыр']],

    [['Авыр']     , ['Лскб', 'Авыр', 'Пскб', 'сложить', 'Выр']],
    [['Авыр']     , ['Лскб', 'Авыр', 'Пскб']],
    [['Авыр']     , ['ИМЯ', 'сложить', 'Выр']],
    [['Авыр']     , ['ИМЯ']],
    [['Авыр']     , ['Число']],

    [['ИМЯ']               , ['СписокСимволов']],
    [['СписокСимволов']    , ['Симв', 'СписокСимволов']],
    [['СписокСимволов']    , ['Симв']],

    [['Число'], ['Цифра', 'Число', 'точка', 'Число']],
    [['Число'], ['Цифра', 'точка', 'Число']],
    [['Число'], ['Цифра', 'Число']], 
    [['Число'], ['Цифра']],

    [['точка'], ['.']],

    [['Лскб'], ['(']],
    [['Пскб'], [')']],

    [['сравнение'], ['==']],
    [['сравнение'], ['!=']],
    [['сравнение'], ['>=']],
    [['сравнение'], ['<=']],
    [['сравнение'], ['>']],
    [['сравнение'], ['<']],

    [['множить'], ['*']],
    [['множить'], ['/']],
    [['сложить'], ['+']],
    [['сложить'], ['-']],
]

n = [
    'Подсчет', 'Выр', 'сравнение', 'Лскб', 'Пскб', 
    'множить', 'Авыр', 'сложить', 'ИМЯ', 'Число',
    'Цифра', 'точка', 'СписокСимволов', 'Симв'

]

t = [
    '+', '-', '*', '/',
    '==', '<', '>', '<=', '>=', '!=', 
    '.', ')', '('
]

s = 'Подсчет'

fillGrammair(apalang, t, n, s, r)

ReservedSymbols = t.copy()


ftog = open('C:/Users/grvla/Desktop/jyputer/kompilatory/grammairs/GRAMMAIR.txt', 'w')
ftog.write(str(apalang))

ftog.close()



#Дополнить грамматику регулярками

allSymbols = 'АБВГДЕЁЖЗИЙКЛАМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ0123456789'
notAllSymbols = 'АБВГДЕЁЖЗИЙКЛАМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ'
allNumbers = '0123456789'

for lettr in allSymbols:
    apalang.setTerminal(lettr)

#ВсеСимволы -> [а-яА-Я0-9_]+

for lettr in allSymbols:
    apalang.setRule(['ВсеСимволы'], [lettr])

apalang.setNonTerminal('ВсеСимволы')

#Симв -> [а-яА-Я_]+ ВсеСимв

for lettr in notAllSymbols:
    apalang.setRule(['Симв'], [lettr, 'ВсеСимв'])
    apalang.setRule(['Симв'], [lettr])

# Цифра -> [0-9]

for lettr in allNumbers:
    apalang.setRule(['Цифра'], [lettr])


ftog = open('C:/Users/grvla/Desktop/jyputer/kompilatory/grammairs/GRAMMAIR.txt', 'w')
ftog.write(str(apalang))

ftog.close()



from ATLcreate import LLRecursion, ATLTree, Rs

tokens = '( ( Я + Я ) * ( Я * Я ) )'.split(' ')

myTree = LLRecursion(apalang, tokens)

myTree.printTree()

print(Rs(myTree.Root, apalang))


